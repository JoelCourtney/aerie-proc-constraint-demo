/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package constraintsdemo

import gov.nasa.jpl.aerie.timeline.plan.*
import com.zaxxer.hikari.HikariConfig
import com.zaxxer.hikari.HikariDataSource
import gov.nasa.jpl.aerie.timeline.Interval
import gov.nasa.jpl.aerie.timeline.CollectOptions

/* CONFIGURE DATABASE CONNECTION HERE */
const val simulationId = 14
const val serverName = "localhost"
const val portNumber = 5432
const val databaseName = "aerie_merlin"
const val applicationName = "Merlin Server"
const val username = "aerie"
const val password = "aerie"

/* CHOOSE CONSTRAINT HERE */
private val constraint = ActivityAndResource()

fun main() {
    val hikariConfig = HikariConfig()

    hikariConfig.setDataSourceClassName("org.postgresql.ds.PGSimpleDataSource")

    hikariConfig.addDataSourceProperty("serverName", serverName)
    hikariConfig.addDataSourceProperty("portNumber", portNumber)
    hikariConfig.addDataSourceProperty("databaseName", databaseName)
    hikariConfig.addDataSourceProperty("applicationName", applicationName)
    hikariConfig.username = username
    hikariConfig.password = password

    hikariConfig.setConnectionInitSql("set time zone 'UTC'")
    val hikariDataSource = HikariDataSource(hikariConfig)
    val connection = hikariDataSource.getConnection()

    val plan = AeriePostgresPlan(connection, simulationId)

    println("Running constraints")

    val opts = CollectOptions(Interval.MIN_MAX, false)

    println(constraint.run(plan, opts).collect(opts))

    println("Done")
}
